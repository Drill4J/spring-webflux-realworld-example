name: Demo workflow
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    types: [opened, reopened, synchronize]

env:
  BASE_URL: http://0.0.0.0:8081
  DRILL_API_KEY: ${{ secrets.DRILL_API_KEY }}
  DRILL_API_URL: ${{ vars.DRILL_API_URL }}
  DRILL_BOT_GITHUB_TOKEN: ${{ secrets.DRILL_BOT_GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Validate Gradle
        uses: gradle/actions/wrapper-validation@v3
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build app
        run: ./gradlew clean build
        env:
          DRILL_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: realworld-spring-webflux:latest
          outputs: type=docker,dest=/tmp/app.tar
      - name: Send build info to Drill4J
        run: ./gradlew drillSendBuildInfo
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: realworld-image
          path: /tmp/app.tar
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: realworld-image
          path: /tmp
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Load image
        run: docker load --input /tmp/app.tar
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Download java-agent
        run: curl -L ${{ vars.JAVA_AGENT_URL }} -o agent.zip
      - name: Unzip java-agent
        run: |
          mkdir -p ./temp-agent-dir Docker/agent
          unzip agent.zip -d ./temp-agent-dir
          find temp-agent-dir -mindepth 2 -exec mv -t Docker/agent/ {} +
      - name: Run docker-compose
        run: docker compose -f ./Docker/docker-compose.yml up -d
        env:
          DRILL_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Validate Gradle
        uses: gradle/actions/wrapper-validation@v3
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run api tests
        run: ./gradlew runApiTests
      - name: Run unit tests
        run: ./gradlew test
      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'
      - name: Docker-compose down
        run: docker compose -f ./Docker/docker-compose.yml down -v
  reportByPR:
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Validate Gradle
        uses: gradle/actions/wrapper-validation@v3
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Send coverage report to Drill4J
        run: ./gradlew drillGithubPullRequestReport
  reportByBranch:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate Gradle
        uses: gradle/actions/wrapper-validation@v3
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Generate Drill4J Change Testing Report
        run: ./gradlew drillGenerateChangeTestingReport
      - name: Archive report
        uses: actions/upload-artifact@v4
        with:
          name: change-testing-report
          path: ./build/drill-reports/drillReport.md